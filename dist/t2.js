/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ var __webpack_modules__ = ({

/***/ "./t2/api.js":
/*!*******************!*\
  !*** ./t2/api.js ***!
  \*******************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Api = void 0;\nexports.main = main;\nvar _utils = __webpack_require__(/*! ./utils.js */ \"./t2/utils.js\");\nvar trailerCache = {};\nvar categoryCache = {};\nvar CACHE_TTL = 24 * 60 * 60 * 1000;\nfunction clearExpiredCache() {\n  console.log('Clearing expired cache'); // Діагностика\n  for (var key in trailerCache) {\n    if (trailerCache[key].timestamp && Date.now() - trailerCache[key].timestamp > CACHE_TTL) {\n      delete trailerCache[key];\n    }\n  }\n  for (var key in categoryCache) {\n    if (categoryCache[key].timestamp && Date.now() - categoryCache[key].timestamp > CACHE_TTL) {\n      delete categoryCache[key];\n      Lampa.Storage.set('trailer_category_cache_' + key, null);\n    }\n  }\n}\nsetInterval(clearExpiredCache, 3600 * 1000);\nfunction finalizeResults(json, status, results, type) {\n  if (!json.results) {\n    console.error('No results in JSON:', json); // Діагностика\n    status.append({}, {});\n    return;\n  }\n  var items = json.results.map(function (item) {\n    return {\n      id: item.id,\n      title: item.title || item.name,\n      poster_path: item.poster_path,\n      backdrop_path: item.backdrop_path,\n      vote_average: item.vote_average,\n      release_date: item.release_date || item.first_air_date,\n      original_title: item.original_title,\n      original_name: item.original_name,\n      name: item.name,\n      release_details: item.release_details || {} // Додано значення за замовчуванням\n    };\n  });\n  results[type] = {\n    title: Lampa.Lang.translate('trailers_' + type),\n    results: items,\n    type: type\n  };\n  status.append({}, {});\n}\nvar Api = exports.Api = {\n  clear: function clear() {\n    trailerCache = {};\n    categoryCache = {};\n  },\n  videos: function videos(data, success, fail) {\n    var key = data.id + '_' + (data.name ? 'tv' : 'movie');\n    if (trailerCache[key] && trailerCache[key].timestamp && Date.now() - trailerCache[key].timestamp < CACHE_TTL) {\n      success(trailerCache[key].data);\n    } else {\n      Lampa.TMDB.video(data.id, data.name ? 'tv' : 'movie', function (json) {\n        trailerCache[key] = {\n          data: json,\n          timestamp: Date.now()\n        };\n        success(json);\n      }, fail);\n    }\n  },\n  getLocalMoviesInTheaters: function getLocalMoviesInTheaters(status, results) {\n    console.log('getLocalMoviesInTheaters called'); // Діагностика\n    var key = 'in_theaters_' + (0, _utils.getRegion)();\n    if (categoryCache[key] && categoryCache[key].timestamp && Date.now() - categoryCache[key].timestamp < CACHE_TTL) {\n      finalizeResults(categoryCache[key].data, status, results, 'in_theaters');\n    } else {\n      var today = new Date();\n      var priorDate = new Date(new Date().setDate(today.getDate() - 30));\n      var dateString = priorDate.getFullYear() + '-' + (priorDate.getMonth() + 1) + '-' + priorDate.getDate();\n      Lampa.TMDB.api('discover/movie?region=' + (0, _utils.getRegion)() + '&language=' + (0, _utils.getInterfaceLanguage)() + '&sort_by=popularity.desc&release_date.gte=' + dateString + '&with_release_type=3|2', function (json) {\n        console.log('TMDB response:', json); // Діагностика\n        if (json.results) {\n          var status = new Lampa.Status(json.results.length);\n          status.onComplite = function () {\n            finalizeResults(json, status, results, 'in_theaters');\n          };\n          json.results.forEach(function (item, i) {\n            Lampa.TMDB.release(item.id, 'movie', function (release) {\n              json.results[i].release_details = release;\n              status.append(item.id, {});\n            }, function () {\n              status.append(item.id, {});\n            });\n          });\n          categoryCache[key] = {\n            data: json,\n            timestamp: Date.now()\n          };\n          Lampa.Storage.set('trailer_category_cache_' + key, categoryCache[key]);\n        } else {\n          console.error('No results for in_theaters'); // Діагностика\n          status.append({}, {});\n        }\n      }, function () {\n        console.error('TMDB request failed'); // Діагностика\n        status.append({}, {});\n      });\n    }\n  }\n  // ... (інші методи, як getUpcomingMovies, getNewSeriesSeasons тощо, залишаються без змін)\n};\nfunction main(status, results) {\n  console.log('main called'); // Діагностика\n  Api.getLocalMoviesInTheaters(status, results);\n  Api.getUpcomingMovies(status, results);\n  Api.getNewSeriesSeasons(status, results);\n  Api.getUpcomingSeries(status, results);\n  Api.getPopularTrailers(status, results);\n}\n\n//# sourceURL=webpack://lampa-plugins/./t2/api.js?");

/***/ }),

/***/ "./t2/component.js":
/*!*************************!*\
  !*** ./t2/component.js ***!
  \*************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Component = Component;\nvar _api = __webpack_require__(/*! ./api.js */ \"./t2/api.js\");\nvar _line = __webpack_require__(/*! ./line.js */ \"./t2/line.js\");\nfunction Component(object) {\n  var scroll;\n  var items = [];\n  var active = 0;\n  var light;\n  this.create = function () {\n    console.log('Component.create called'); // Діагностика\n    try {\n      scroll = $('<div class=\"trailers scroll--h\"></div>');\n      var menu = [];\n      if (!Lampa.Platform.is('tizen')) {\n        menu.push({\n          title: Lampa.Lang.translate('settings_reset'),\n          subtitle: Lampa.Lang.translate('trailers_clear_cache'),\n          clear: true\n        });\n      }\n      Lampa.Component.add('trailers', this);\n      this.build();\n    } catch (e) {\n      console.error('Error in Component.create:', e); // Діагностика\n      throw e;\n    }\n  };\n  this.build = function () {\n    console.log('Component.build called'); // Діагностика\n    try {\n      var status = new Lampa.Status(5);\n      var results = {};\n      status.onComplite = function () {\n        console.log('Status completed:', results); // Діагностика\n        for (var i in results) {\n          if (results[i].results.length) {\n            this.append(results[i]);\n          }\n        }\n        if (!items.length) {\n          scroll.append('<div class=\"trailers__empty\">' + Lampa.Lang.translate('trailers_empty') + '</div>');\n        }\n        if (light) Lampa.Background.immediately('');\n        this.activity.loader(false);\n        this.activity.toggle();\n      }.bind(this);\n      (0, _api.main)(status, results);\n    } catch (e) {\n      console.error('Error in Component.build:', e); // Діагностика\n      throw e;\n    }\n  };\n  this.append = function (element) {\n    console.log('Component.append called:', element); // Діагностика\n    var item = new _line.Line(element);\n    item.create();\n    item.onDown = this.down.bind(this);\n    item.onUp = this.up.bind(this);\n    item.onBack = this.back.bind(this);\n    item.onToggle = function () {\n      active = items.indexOf(item);\n    };\n    item.wrap = $('<div></div>');\n    if (light) {\n      scroll.append(item.wrap);\n    } else {\n      scroll.append(item.render());\n    }\n    items.push(item);\n  };\n\n  // ... (інші методи: down, up, back, start, activity, destroy)\n}\n\n//# sourceURL=webpack://lampa-plugins/./t2/component.js?");

/***/ }),

/***/ "./t2/index.js":
/*!*********************!*\
  !*** ./t2/index.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar _trailer = __webpack_require__(/*! ./trailer.js */ \"./t2/trailer.js\");\nvar _line = __webpack_require__(/*! ./line.js */ \"./t2/line.js\");\nvar _component = __webpack_require__(/*! ./component.js */ \"./t2/component.js\");\nvar _api = __webpack_require__(/*! ./api.js */ \"./t2/api.js\");\nvar _templates = __webpack_require__(/*! ./templates.js */ \"./t2/templates.js\");\nfunction startPlugin() {\n  if (window.plugin_trailers_ready) return;\n  window.plugin_trailers_ready = true;\n\n  // Додаємо переклади \n  Lampa.Lang.add(_templates.translations);\n\n  // Реєструємо компоненти\n  Lampa.Component.add('trailers_main', _component.Component$1);\n  Lampa.Component.add('trailers_full', _component.Component);\n\n  // Додаємо шаблони та стилі\n  (0, _templates.initTemplates)();\n  function add() {\n    var button = $('<li class=\"menu__item selector\"><div class=\"menu__ico\"><svg height=\"70\" viewBox=\"0 0 80 70\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M71.2555 2.08955C74.6975 3.2397 77.4083 6.62804 78.3283 10.9306C80 18.7291 80 35 80 35C80 35 80 51.2709 78.3283 59.0694C77.4083 63.372 74.6975 66.7603 71.2555 67.9104C65.0167 70 40 70 40 70C40 70 14.9833 70 8.74453 67.9104C5.3025 66.7603 2.59172 63.372 1.67172 59.0694C0 51.2709 0 35 0 35C0 35 0 18.7291 1.67172 10.9306C2.59172 6.62804 5.3025 3.2395 8.74453 2.08955C14.9833 0 40 0 40 0C40 0 65.0167 0 71.2555 2.08955ZM55.5909 35.0004L29.9773 49.5714V20.4286L55.5909 35.0004Z\" fill=\"currentColor\"/></svg></div><div class=\"menu__text\">' + Lampa.Lang.translate('title_trailers') + '</div></li>');\n    button.on('hover:enter', function () {\n      Lampa.Activity.push({\n        url: '',\n        title: Lampa.Lang.translate('title_trailers'),\n        component: 'trailers_main',\n        page: 1\n      });\n    });\n    $('.menu .menu__list').eq(0).append(button);\n    $('body').append(Lampa.Template.get('trailer_style', {}, true));\n    Lampa.Storage.listener.follow('change', function (event) {\n      if (event.name === 'language') {\n        _api.Api.clear();\n      }\n    });\n  }\n  if (Lampa.TMDB && Lampa.TMDB.key()) {\n    add();\n  } else {\n    Lampa.Noty.show('TMDB API key is missing. Trailers plugin cannot be loaded.');\n  }\n}\n\n// Запускаємо плагін\nif (!window.appready) {\n  Lampa.Listener.follow('app', function (e) {\n    if (e.type === 'ready') {\n      startPlugin();\n    }\n  });\n} else {\n  startPlugin();\n}\n\n//# sourceURL=webpack://lampa-plugins/./t2/index.js?");

/***/ }),

/***/ "./t2/line.js":
/*!********************!*\
  !*** ./t2/line.js ***!
  \********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Line = Line;\nvar _trailer = __webpack_require__(/*! ./trailer.js */ \"./t2/trailer.js\");\nfunction Line(data) {\n  console.log('Line constructor called'); // Діагностика\n  this.data = data;\n  this.cards = [];\n  this.create = function () {\n    console.log('Line.create called'); // Діагностика\n    this.cards = [];\n    this.data.results.forEach(item => {\n      const card = new _trailer.Trailer(item, {\n        type: this.data.type\n      });\n      card.create();\n      this.cards.push(card);\n    });\n  };\n  this.render = function () {\n    console.log('Line.render called'); // Діагностика\n    const element = Lampa.Template.get('line', {\n      title: this.data.title\n    });\n    this.cards.forEach(card => {\n      const cardElement = card.render();\n      if (cardElement && cardElement.length) {\n        element.find('.line__cards').append(cardElement);\n      }\n    });\n    return element;\n  };\n  this.destroy = function () {\n    console.log('Line.destroy called'); // Діагностика\n    this.cards.forEach(card => {\n      card.destroy();\n    });\n    this.cards = [];\n  };\n  this.toggle = function () {\n    if (this.cards.length) {\n      Lampa.Controller.collectionSet(this.render());\n      Lampa.Controller.collectionFocus(this.cards[0].render()[0], this.render());\n    }\n  };\n  this.onDown = function () {};\n  this.onUp = function () {};\n  this.onBack = function () {};\n}\n\n// Явний експорт\n\n//# sourceURL=webpack://lampa-plugins/./t2/line.js?");

/***/ }),

/***/ "./t2/templates.js":
/*!*************************!*\
  !*** ./t2/templates.js ***!
  \*************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.initTemplates = initTemplates;\nexports.translations = void 0;\nconst translations = exports.translations = {\n  trailers_popular: {\n    ru: 'Популярное',\n    uk: 'Популярне',\n    en: 'Popular'\n  },\n  trailers_in_theaters: {\n    ru: 'В прокате',\n    uk: 'В прокаті',\n    en: 'In Theaters'\n  },\n  trailers_upcoming_movies: {\n    ru: 'Ожидаемые фильмы',\n    uk: 'Очікувані фільми',\n    en: 'Upcoming Movies'\n  },\n  trailers_popular_series: {\n    ru: 'Популярные сериалы',\n    uk: 'Популярні серіали',\n    en: 'Popular Series'\n  },\n  trailers_new_series_seasons: {\n    ru: 'Новые сериалы и сезоны',\n    uk: 'Нові серіали та сезони',\n    en: 'New Series and Seasons'\n  },\n  trailers_upcoming_series: {\n    ru: 'Ожидаемые сериалы',\n    uk: 'Очікувані серіали',\n    en: 'Upcoming Series'\n  },\n  trailers_no_trailers: {\n    ru: 'Нет трейлеров',\n    uk: 'Немає трейлерів',\n    en: 'No trailers'\n  },\n  trailers_no_ua_trailer: {\n    ru: 'Нет украинского трейлера',\n    uk: 'Немає українського трейлера',\n    en: 'No Ukrainian trailer'\n  },\n  trailers_no_ru_trailer: {\n    ru: 'Нет русского трейлера',\n    uk: 'Немає російського трейлера',\n    en: 'No Russian trailer'\n  },\n  trailers_view: {\n    ru: 'Подробнее',\n    uk: 'Докладніше',\n    en: 'More'\n  },\n  title_trailers: {\n    ru: 'Трейлеры',\n    uk: 'Трейлери',\n    en: 'Trailers'\n  },\n  trailers_filter: {\n    ru: 'Фильтр',\n    uk: 'Фільтр',\n    en: 'Filter'\n  },\n  trailers_filter_today: {\n    ru: 'Сегодня',\n    uk: 'Сьогодні',\n    en: 'Today'\n  },\n  trailers_filter_week: {\n    ru: 'Неделя',\n    uk: 'Тиждень',\n    en: 'Week'\n  },\n  trailers_filter_month: {\n    ru: 'Месяц',\n    uk: 'Місяць',\n    en: 'Month'\n  },\n  trailers_filter_year: {\n    ru: 'Год',\n    uk: 'Рік',\n    en: 'Year'\n  },\n  trailers_movies: {\n    ru: 'Фильмы',\n    uk: 'Фільми',\n    en: 'Movies'\n  },\n  trailers_series: {\n    ru: 'Сериалы',\n    uk: 'Серіали',\n    en: 'Series'\n  },\n  trailers_more: {\n    ru: 'Ещё',\n    uk: 'Ще',\n    en: 'More'\n  },\n  trailers_popular_movies: {\n    ru: 'Популярные фильмы',\n    uk: 'Популярні фільми',\n    en: 'Popular Movies'\n  },\n  trailers_last_movie: {\n    ru: 'Это последний фильм: [title]',\n    uk: 'Це останній фільм: [title]',\n    en: 'This is the last movie: [title]'\n  },\n  trailers_no_more_data: {\n    ru: 'Больше нет данных для загрузки',\n    uk: 'Більше немає даних для завантаження',\n    en: 'No more data to load'\n  }\n};\nfunction initTemplates() {\n  Lampa.Template.add('trailer', '<div class=\"card selector card--trailer layer--render layer--visible\"><div class=\"card__view\"><img src=\"./img/img_load.svg\" class=\"card__img\"><div class=\"card__promo\"><div class=\"card__promo-text\"><div class=\"card__title\"></div></div><div class=\"card__details\"></div></div></div><div class=\"card__play\"><img src=\"./img/icons/player/play.svg\"></div></div>');\n  Lampa.Template.add('trailer_style', '<style>.card.card--trailer,.card-more.more--trailers{width:25.7em}.card.card--trailer .card__view{padding-bottom:56%;margin-bottom:0}.card.card--trailer .card__details{margin-top:0.8em}.card.card--trailer .card__play{position:absolute;top:50%;transform:translateY(-50%);left:1.5em;background:#000000b8;width:2.2em;height:2.2em;border-radius:100%;text-align:center;padding-top:0.6em}.card.card--trailer .card__play img{width:0.9em;height:1em}.card.card--trailer .card__rating{position:absolute;bottom:0.5em;right:0.5em;background:#000000b8;padding:0.2em 0.5em;border-radius:3px;font-size:1.2em}.card.card--trailer .card__trailer-lang{position:absolute;top:0.5em;right:0.5em;background:#000000b8;padding:0.2em 0.5em;border-radius:3px;text-transform:uppercase;font-size:1.2em}.card.card--trailer .card__release-date{position:absolute;top:2em;right:0.5em;background:#000000b8;padding:0.2em 0.5em;border-radius:3px;font-size:1.2em}.card-more.more--trailers .card-more__box{padding-bottom:56%}.category-full--trailers{display:flex;flex-wrap:wrap;justify-content:space-between}.category-full--trailers .card{width:33.3%;margin-bottom:1.5em}.category-full--trailers .card .card__view{padding-bottom:56%;margin-bottom:0}.items-line__more{display:inline-block;margin-left:10px;cursor:pointer;padding:0.5em 1em}@media screen and (max-width:767px){.category-full--trailers .card{width:50%}}@media screen and (max-width:400px){.category-full--trailers .card{width:100%}}</style>');\n}\n\n//# sourceURL=webpack://lampa-plugins/./t2/templates.js?");

/***/ }),

/***/ "./t2/trailer.js":
/*!***********************!*\
  !*** ./t2/trailer.js ***!
  \***********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Trailer = Trailer;\nvar _api = __webpack_require__(/*! ./api.js */ \"./t2/api.js\");\nvar _utils = __webpack_require__(/*! ./utils.js */ \"./t2/utils.js\");\nfunction Trailer(data, params) {\n  this.build = function () {\n    this.card = Lampa.Template.get('trailer', data);\n    this.img = this.card.find('img')[0];\n    this.is_youtube = params.type === 'rating';\n    this.rating = data.vote_average ? data.vote_average.toFixed(1) : '-';\n    this.trailer_lang = '';\n    this.release_date = '-';\n    if (!this.is_youtube) {\n      var create = ((data.release_date || data.first_air_date || '0000') + '').slice(0, 4);\n      var title = data.title || data.name || data.original_title || data.original_name;\n      this.card.find('.card__title').text(title);\n      this.card.find('.card__details').text(create + ' - ' + (data.original_title || data.original_name));\n      if (this.rating !== '-') {\n        this.card.find('.card__view').append('<div class=\"card__rating\">' + this.rating + '</div>');\n      } else {\n        this.card.find('.card__view').append('<div class=\"card__rating\">-</div>');\n      }\n      this.card.find('.card__view').append('<div class=\"card__trailer-lang\"></div>');\n      this.card.find('.card__view').append('<div class=\"card__release-date\"></div>');\n    } else {\n      this.card.find('.card__title').text(data.name);\n      this.card.find('.card__details').remove();\n    }\n  };\n  this.cardImgBackground = function (card_data) {\n    if (Lampa.Storage.field('background')) {\n      if (Lampa.Storage.get('background_type', 'complex') === 'poster' && window.innerWidth > 790) {\n        return card_data.backdrop_path ? Lampa.Api.img(card_data.backdrop_path, 'original') : this.is_youtube ? 'https://img.youtube.com/vi/' + data.id + '/hqdefault.jpg' : '';\n      }\n      return card_data.backdrop_path ? Lampa.Api.img(card_data.backdrop_path, 'w500') : this.is_youtube ? 'https://img.youtube.com/vi/' + data.id + '/hqdefault.jpg' : '';\n    }\n    return '';\n  };\n  this.image = function () {\n    var _this = this;\n    this.img.onload = function () {\n      _this.card.addClass('card--loaded');\n    };\n    this.img.onerror = function () {\n      _this.img.src = './img/img_broken.svg';\n    };\n  };\n  this.loadTrailerInfo = function () {\n    var _this = this;\n    if (!this.is_youtube && !this.trailer_lang) {\n      _api.Api.videos(data, function (videos) {\n        var trailers = videos.results ? videos.results.filter(function (v) {\n          return v.type === 'Trailer';\n        }) : [];\n        var preferredLangs = (0, _utils.getPreferredLanguage)();\n        var video = trailers.find(function (v) {\n          return preferredLangs.includes(v.iso_639_1);\n        }) || trailers[0];\n        _this.trailer_lang = video ? video.iso_639_1 : '-';\n        if (_this.trailer_lang !== '-') {\n          _this.card.find('.card__trailer-lang').text(_this.trailer_lang.toUpperCase());\n        } else {\n          _this.card.find('.card__trailer-lang').text('-');\n        }\n        if (params.type === 'in_theaters' || params.type === 'upcoming_movies') {\n          if (data.release_details && data.release_details.results) {\n            var region = (0, _utils.getRegion)();\n            var releaseInfo = data.release_details.results.find(function (r) {\n              return r.iso_3166_1 === region;\n            });\n            if (releaseInfo && releaseInfo.release_dates && releaseInfo.release_dates.length) {\n              var releaseDate = releaseInfo.release_dates[0].release_date;\n              _this.release_date = (0, _utils.formatDateToDDMMYYYY)(releaseDate);\n            } else if (data.release_date) {\n              _this.release_date = (0, _utils.formatDateToDDMMYYYY)(data.release_date);\n            }\n          } else if (data.release_date) {\n            _this.release_date = (0, _utils.formatDateToDDMMYYYY)(data.release_date);\n          }\n        } else if (params.type === 'new_series_seasons' || params.type === 'upcoming_series') {\n          if (data.release_details && data.release_details.first_air_date) {\n            _this.release_date = (0, _utils.formatDateToDDMMYYYY)(data.release_details.first_air_date);\n          }\n        }\n        _this.card.find('.card__release-date').text(_this.release_date);\n      }, function () {\n        _this.trailer_lang = '-';\n        _this.card.find('.card__trailer-lang').text('-');\n        _this.card.find('.card__release-date').text('-');\n      });\n    }\n  };\n  this.play = function (id) {\n    if (!id) {\n      Lampa.Noty.show(Lampa.Lang.translate('trailers_no_trailers'));\n      return;\n    }\n    try {\n      if (Lampa.Manifest.app_digital >= 183) {\n        var item = {\n          title: Lampa.Utils.shortText(data.title || data.name, 50),\n          id: id,\n          youtube: true,\n          url: 'https://www.youtube.com/watch?v=' + id,\n          icon: '<img class=\"size-youtube\" src=\"https://img.youtube.com/vi/' + id + '/default.jpg\" />',\n          template: 'selectbox_icon'\n        };\n        Lampa.Player.play(item);\n        Lampa.Player.playlist([item]);\n      } else {\n        Lampa.YouTube.play(id);\n      }\n    } catch (e) {\n      Lampa.Noty.show('Помилка відтворення трейлера: ' + e.message);\n    }\n  };\n  this.create = function () {\n    var _this2 = this;\n    this.build();\n    if (!this.is_youtube) {\n      _api.Api.videos(data, function (videos) {\n        var trailers = videos.results ? videos.results.filter(function (v) {\n          return v.type === 'Trailer';\n        }) : [];\n        if (trailers.length === 0) {\n          _this2.card = null;\n          return;\n        }\n        _this2.card.on('hover:focus', function (e, is_mouse) {\n          Lampa.Background.change(_this2.cardImgBackground(data));\n          _this2.onFocus(e.target, data, is_mouse);\n          _this2.loadTrailerInfo();\n        }).on('hover:enter', function () {\n          var preferredLangs = (0, _utils.getPreferredLanguage)();\n          var video = trailers.find(function (v) {\n            return preferredLangs.includes(v.iso_639_1);\n          }) || trailers[0];\n          if (video && video.key) {\n            if (preferredLangs[0] === 'uk' && video.iso_639_1 !== 'uk' && video.iso_639_1 !== 'en') {\n              Lampa.Noty.show(Lampa.Lang.translate('trailers_no_ua_trailer'));\n            } else if (preferredLangs[0] === 'ru' && video.iso_639_1 !== 'ru' && video.iso_639_1 !== 'en') {\n              Lampa.Noty.show(Lampa.Lang.translate('trailers_no_ru_trailer'));\n            }\n            _this2.play(video.key);\n          } else {\n            Lampa.Noty.show(Lampa.Lang.translate('trailers_no_trailers'));\n          }\n        }).on('hover:long', function () {\n          var items = [{\n            title: Lampa.Lang.translate('trailers_view'),\n            view: true\n          }];\n          Lampa.Loading.start(function () {\n            _api.Api.clear();\n            Lampa.Loading.stop();\n          });\n          items.push({\n            title: Lampa.Lang.translate('title_trailers'),\n            separator: true\n          });\n          trailers.forEach(function (video) {\n            if (video.key && (0, _utils.getPreferredLanguage)().includes(video.iso_639_1)) {\n              items.push({\n                title: video.name || 'Trailer',\n                id: video.key,\n                subtitle: video.iso_639_1\n              });\n            }\n          });\n          Lampa.Select.show({\n            title: Lampa.Lang.translate('title_action'),\n            items: items,\n            onSelect: function onSelect(item) {\n              Lampa.Controller.toggle('content');\n              if (item.view) {\n                Lampa.Activity.push({\n                  url: '',\n                  component: 'full',\n                  id: data.id,\n                  method: data.name ? 'tv' : 'movie',\n                  card: data,\n                  source: 'tmdb'\n                });\n              } else {\n                _this2.play(item.id);\n              }\n            },\n            onBack: function onBack() {\n              Lampa.Controller.toggle('content');\n            }\n          });\n        });\n        _this2.image();\n        _this2.loadTrailerInfo();\n      }, function () {\n        _this2.card = null;\n      });\n    } else {\n      this.card.on('hover:focus', function (e, is_mouse) {\n        Lampa.Background.change(_this2.cardImgBackground(data));\n        _this2.onFocus(e.target, data, is_mouse);\n      }).on('hover:enter', function () {\n        _this2.play(data.id);\n      });\n      this.image();\n    }\n  };\n  this.destroy = function () {\n    if (this.img) {\n      this.img.onerror = null;\n      this.img.onload = null;\n      this.img.src = '';\n    }\n    if (this.card) {\n      this.card.remove();\n      this.card = null;\n    }\n    this.img = null;\n  };\n  this.visible = function () {\n    if (this.visibled || !this.card) return;\n    if (params.type === 'rating') {\n      this.img.src = 'https://img.youtube.com/vi/' + data.id + '/hqdefault.jpg';\n    } else if (data.backdrop_path) {\n      this.img.src = Lampa.Api.img(data.backdrop_path, 'w500');\n    } else if (data.poster_path) {\n      this.img.src = Lampa.Api.img(data.poster_path);\n    } else {\n      this.img.src = './img/img_broken.svg';\n    }\n    this.visibled = true;\n  };\n  this.render = function () {\n    return this.card || $('<div></div>');\n  };\n}\n\n//# sourceURL=webpack://lampa-plugins/./t2/trailer.js?");

/***/ }),

/***/ "./t2/utils.js":
/*!*********************!*\
  !*** ./t2/utils.js ***!
  \*********************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.debounce = debounce;\nexports.formatDateToDDMMYYYY = formatDateToDDMMYYYY;\nexports.getFormattedDate = getFormattedDate;\nexports.getInterfaceLanguage = getInterfaceLanguage;\nexports.getPreferredLanguage = getPreferredLanguage;\nexports.getRegion = getRegion;\nfunction debounce(func, wait) {\n  var timeout;\n  return function () {\n    var context = this,\n      args = arguments;\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      func.apply(context, args);\n    }, wait);\n  };\n}\nfunction getFormattedDate(daysAgo) {\n  var today = new Date();\n  if (daysAgo) today.setDate(today.getDate() - daysAgo);\n  var year = today.getFullYear();\n  var month = String(today.getMonth() + 1).padStart(2, '0');\n  var day = String(today.getDate()).padStart(2, '0');\n  return year + '-' + month + '-' + day;\n}\nfunction formatDateToDDMMYYYY(dateStr) {\n  if (!dateStr) return '-';\n  var date = new Date(dateStr);\n  var day = String(date.getDate()).padStart(2, '0');\n  var month = String(date.getMonth() + 1).padStart(2, '0');\n  var year = date.getFullYear();\n  return day + '.' + month + '.' + year;\n}\nfunction getRegion() {\n  var lang = Lampa.Storage.get('language', 'ru');\n  return lang === 'uk' ? 'UA' : lang === 'ru' ? 'RU' : 'US';\n}\nfunction getInterfaceLanguage() {\n  return Lampa.Storage.get('language', 'ru');\n}\nfunction getPreferredLanguage() {\n  var lang = Lampa.Storage.get('language', 'ru');\n  if (lang === 'uk') {\n    return ['uk', 'en'];\n  } else if (lang === 'ru') {\n    return ['ru', 'en'];\n  } else {\n    return ['en'];\n  }\n}\n\n//# sourceURL=webpack://lampa-plugins/./t2/utils.js?");

/***/ })

/******/ });
/************************************************************************/
/******/ // The module cache
/******/ var __webpack_module_cache__ = {};
/******/ 
/******/ // The require function
/******/ function __webpack_require__(moduleId) {
/******/ 	// Check if module is in cache
/******/ 	var cachedModule = __webpack_module_cache__[moduleId];
/******/ 	if (cachedModule !== undefined) {
/******/ 		return cachedModule.exports;
/******/ 	}
/******/ 	// Create a new module (and put it into the cache)
/******/ 	var module = __webpack_module_cache__[moduleId] = {
/******/ 		// no module.id needed
/******/ 		// no module.loaded needed
/******/ 		exports: {}
/******/ 	};
/******/ 
/******/ 	// Execute the module function
/******/ 	__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 
/******/ 	// Return the exports of the module
/******/ 	return module.exports;
/******/ }
/******/ 
/************************************************************************/
/******/ 
/******/ // startup
/******/ // Load entry module and return exports
/******/ // This entry module can't be inlined because the eval devtool is used.
/******/ var __webpack_exports__ = __webpack_require__("./t2/index.js");
/******/ 
