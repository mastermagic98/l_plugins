// –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ –º–µ–Ω—é –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å Lampa
Lampa.SettingsApi.addComponent({
    component: 'my_themes',
    name: Lampa.Lang.translate('my_themes'),
    icon: '<span style="font-size: 20px;">üñåÔ∏è</span>' // –ü—Ä–æ—Å—Ç–∞ —ñ–∫–æ–Ω–∫–∞-–µ–º–æ–¥–∑—ñ
});

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –≤–∏–±–æ—Ä—É –∫–æ–ª—å–æ—Ä—É
function createColorPicker(content) {
    console.log('[MyThemes] –ü–æ—á–∏–Ω–∞—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –≤–∏–±–æ—Ä—É –∫–æ–ª—å–æ—Ä—É');

    // –û—á–∏—â–∞—î–º–æ –≤–º—ñ—Å—Ç
    content.innerHTML = '';

    // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    var container = document.createElement('div');
    container.style.padding = '20px';
    container.style.background = '#333';
    container.style.borderRadius = '10px';
    container.style.maxWidth = '400px';
    container.style.margin = '0 auto';
    container.style.color = '#fff';

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–Ω–∞—á–µ–Ω—å –∫–æ–ª—å–æ—Ä—É
    var values = { red: 255, green: 255, blue: 255, alpha: 100 };

    // –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ–≤–∑—É–Ω–∫–∏ –¥–ª—è RGB —Ç–∞ Alpha
    var sliders = [
        { label: '–ß–µ—Ä–≤–æ–Ω–∏–π', id: 'red', max: 255 },
        { label: '–ó–µ–ª–µ–Ω–∏–π', id: 'green', max: 255 },
        { label: '–°–∏–Ω—ñ–π', id: 'blue', max: 255 },
        { label: '–ü—Ä–æ–∑–æ—Ä—ñ—Å—Ç—å', id: 'alpha', max: 100 }
    ];

    sliders.forEach(function(slider) {
        // –°—Ç–≤–æ—Ä—é—î–º–æ –º—ñ—Ç–∫—É
        var label = document.createElement('label');
        label.textContent = slider.label + ': ';
        label.style.display = 'block';
        label.style.margin = '10px 0 5px';

        // –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ–≤–∑—É–Ω–æ–∫
        var input = document.createElement('input');
        input.type = 'range';
        input.min = '0';
        input.max = slider.max.toString();
        input.value = values[slider.id].toString();
        input.id = 'color_' + slider.id;
        input.style.width = '100%';

        // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –ø–æ–≤–∑—É–Ω–∫–∞
        input.oninput = function() {
            values[slider.id] = parseInt(this.value);
            updateTheme();
        };

        container.appendChild(label);
        container.appendChild(input);
    });

    // –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ–ª–µ –¥–ª—è HEX-–∫–æ–¥—É
    var hexLabel = document.createElement('label');
    hexLabel.textContent = 'HEX-–∫–æ–¥: ';
    hexLabel.style.display = 'block';
    hexLabel.style.margin = '10px 0 5px';

    var hexInput = document.createElement('input');
    hexInput.type = 'text';
    hexInput.placeholder = '#FFFFFF';
    hexInput.style.width = '100%';
    hexInput.style.padding = '5px';
    hexInput.style.borderRadius = '5px';

    // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è HEX-–∫–æ–¥—É
    hexInput.oninput = function() {
        var hex = this.value.replace('#', '');
        if (hex.length === 6) {
            var r = parseInt(hex.substring(0, 2), 16);
            var g = parseInt(hex.substring(2, 4), 16);
            var b = parseInt(hex.substring(4, 6), 16);
            if (!isNaN(r) && !isNaN(g) && !isNaN(b)) {
                values.red = r;
                values.green = g;
                values.blue = b;
                document.getElementById('color_red').value = r;
                document.getElementById('color_green').value = g;
                document.getElementById('color_blue').value = b;
                updateTheme();
            }
        }
    };

    container.appendChild(hexLabel);
    container.appendChild(hexInput);

    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–µ–º–∏
    function updateTheme() {
        console.log('[MyThemes] –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–µ–º–∏ –∑ RGBA:', values);

        // –§–æ—Ä–º—É—î–º–æ HEX-–∫–æ–¥ –±–µ–∑ –ø—Ä–æ–∑–æ—Ä–æ—Å—Ç—ñ
        var hex = '#' + ((1 << 24) + (values.red << 16) + (values.green << 8) + values.blue).toString(16).slice(1);
        hexInput.value = hex;

        // –§–æ—Ä–º—É—î–º–æ RGBA –¥–ª—è –ø—Ä–æ–∑–æ—Ä–æ—Å—Ç—ñ
        var rgba = 'rgba(' + values.red + ',' + values.green + ',' + values.blue + ',' + (values.alpha / 100) + ')';

        // –û–Ω–æ–≤–ª—é—î–º–æ –∑–º—ñ–Ω–Ω—É --accent-color —É :root
        var style = document.createElement('style');
        style.id = 'custom-theme';
        style.textContent = ':root { --accent-color: ' + rgba + ' !important; }';

        var oldStyle = document.getElementById('custom-theme');
        if (oldStyle) oldStyle.remove();
        document.head.appendChild(style);

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
        Lampa.Storage.set('custom_theme', {
            red: values.red,
            green: values.green,
            blue: values.blue,
            alpha: values.alpha
        });
    }

    // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    var savedTheme = Lampa.Storage.get('custom_theme', null);
    if (savedTheme) {
        console.log('[MyThemes] –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:', savedTheme);
        values.red = savedTheme.red;
        values.green = savedTheme.green;
        values.blue = savedTheme.blue;
        values.alpha = savedTheme.alpha;
        document.getElementById('color_red').value = savedTheme.red;
        document.getElementById('color_green').value = savedTheme.green;
        document.getElementById('color_blue').value = savedTheme.blue;
        document.getElementById('color_alpha').value = savedTheme.alpha;
        updateTheme();
    } else {
        console.log('[MyThemes] –ù–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ');
        updateTheme();
    }

    // –î–æ–¥–∞—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–æ –≤–º—ñ—Å—Ç—É
    content.appendChild(container);
    console.log('[MyThemes] –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤–∏–±–æ—Ä—É –∫–æ–ª—å–æ—Ä—É –¥–æ–¥–∞–Ω–æ –¥–æ DOM');
}

// –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥—É
Lampa.SettingsApi.addComponent({
    component: 'my_themes',
    name: Lampa.Lang.translate('my_themes'),
    icon: '<span style="font-size: 20px;">üñåÔ∏è</span>',
    onRender: function(content) {
        console.log('[MyThemes] –í–∏–∫–ª–∏–∫–∞–Ω–æ onRender –¥–ª—è my_themes');
        createColorPicker(content);
    }
});
